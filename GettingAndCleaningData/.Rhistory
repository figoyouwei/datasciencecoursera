htmlCode[1,2,3,4]
htmlCode[c(1,2,3,4)]
sapply(htmlCode[iLines],nchar)
iLines <- c(10,20,30,100)
sapply(htmlCode[iLines],nchar)
lapply(htmlCode[iLines],nchar)
vapply(htmlCode[iLines],nchar)
lapply(htmlCode[iLines],nchar)
sapply(htmlCode[iLines],nchar)
?read.table
dataQ5 <- read.table("./Quiz2/Q5.for",sep="     ",skip=3,header=TRUE)
dataQ5 <- read.table("./Quiz2/Q5.for",sep="     ",skip=3,header=TRUE)
dataQ5 <- read.table("./Quiz2/Q5.for",sep=" ",skip=3,header=TRUE)
?read.fwf
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=3,header=TRUE)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=3,widths=c(5,5,5,5),header=TRUE)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=4,widths=c(12, 7,4, 9,4, 9,4, 9,4))
dataQ5
View(dataQ5)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=3,
widths=c(12, 7,4, 9,4, 9,4, 9,4),
header=TRUE)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4),
header=TRUE)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=3,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
View(dataQ5)
dataQ5 <- read.fwf("./Quiz2/Q5.for",skip=3,header=TRUE,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
dataQ5 <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7,4, 9,4, 9,4, 9,4))
View(dataQ5)
data[,4]
length(dataQ5[,4])
sapply(dataQ5[,4],sum)
sum(dataQ5[,4])
sum(dataQ5[,8]) + sum(dataQ5[,9])
dataQ5[,5]
sum(dataQ5[,5])
sum(dataQ5[,4])
sum(dataQ5[,4])
sum(dataQ5[,5])
sum(dataQ5[,3])
sum(dataQ5[,4])
sum(dataQ5[,8])
sum(dataQ5[,1])
sum(dataQ5[,2])
sum(dataQ5[,4])
sum(dataQ5[,6])
sum(dataQ5[,8])
sum(dataQ5[,4]) + sum(dataQ5[,5])
q()
514.48-505-0.03
rm(list=ls())
cat("\014")
library(xlsx)
dat_tr <- read.xlsx("/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
sheetName = "Sheet1",colIndex=c(1,2,3,4))
i <- sapply(dat_tr, is.factor)
dat_tr[i] <- lapply(dat_tr[i], as.character)
library(lubridate)
newtrade <- c(as(today(),"character"),"股息红利","133.00","NA")
dat_tr_new <- rbind(dat_tr,newtrade)
514.48-506-0.03
library(lubridate)
newtrade <- c(as(today(),"character"),"中粮生化","8.45","NA")
dat_tr_new <- rbind(dat_tr,newtrade)
write.xlsx2(dat_tr_new,
"/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
row.names=FALSE)
q()
library(xlsx)
dat_tr <- read.xlsx("/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
sheetName = "Sheet1",colIndex=c(1,2,3,4))
i <- sapply(dat_tr, is.factor)
dat_tr[i] <- lapply(dat_tr[i], as.character)
View(dat_tr)
library(lubridate)
newtrade <- c(as(today(),"character"),"信诚300B(150052)","78.65","NA")
dat_tr_new <- rbind(dat_tr,newtrade)
write.xlsx2(dat_tr_new,
"/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
row.names=FALSE)
q()
library(xlsx)
dat_tr <- read.xlsx("/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
sheetName = "Sheet1",colIndex=c(1,2,3,4))
i <- sapply(dat_tr, is.factor)
dat_tr[i] <- lapply(dat_tr[i], as.character)
write.xlsx2(dat_tr,
"/Users/youweizheng/Google Drive/HusbandStock/trades.xlsx",
row.names=FALSE)
q()
q()
set.seed(13435)
sample(1:5)
sample(1:5)
sample(1:5)
?sample
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X
X[sample(1:5),]
X$var[c(1:3)] <- NA
X$var[c(1:3)] = NA
X$var2[c(1:3)] = NA
X
X[,1]
X[,3]
X[,"var1"]
X[,"var3"]
X[1:2,"var3"]
X[X$var1>3]
X[X$var1>3,]
X[X$var1>3,1]
X[X$var1>3,"var1"]
X[X$var1>3,]
X[(X$var1>3 & X$var3>12),]
X[(X$var1>3 | X$var3>15),]
X[(X$var1<4 | X$var3>12),]
?which
X$var2>8
which(X$var2>8)
X[X$var2>8,]
X[which(X$var2>8),]
X[which(X$var2>8),]
which(X$var2>8)
(X$var2>8)
which(X$var2>8)
integer(0)
which(X$var2<8)
sort(X$var1)
sort
?sort
sort(X$var1,decreasing=TRUE)
sort(X$var2,na.last=TRUE)
?order
order(X$var1)
X[order(X$var1),]
View(X)
View(X)
X[order(X$var1),]
X[4,1] <- 3
View(X)
View(X)
X[4,3] <- 3
View(X)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X <- X[sample(1:5),]; X$var2[c(1:3)] = NA
View(X)
X[4,1] <- 3
View(X)
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
View(X)
X <- X[sample(1:5),]; X$var2[c(1:3)] = NA
X
View(X)
X
X[4,1] <- 3
X
X[order(X$var1),]
X
library(plyr)
arrange(X,var1)
arrange(X,desc(var1))
arrange(X,desc(var1),desc(var3))
X$var4 <- rnorm(5)
X
X$var4 <- rnorm(6)
cbind(X,rnorm(5))
cbind(X,var5=rnorm(5))
?cbind
X[6,] <- rnorm(5)
rbind(X,rnorm(5))
q()
head(mtcars)
q()
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X$var2[c(1:3)] = NA
X
X$var1>3
class(X$var1>3)
X[X$var1>3,]
class(X[X$var1>3,])
X$var1>3 & X$var3>12
X$var1>3 & X$var3>13
X[c(1,4),]
X[2,]
X[2,] > 4
which(X[2,] > 4)
X[,which(X[2,] > 4)]
X[which(X[2,] > 4),]
X > 3
which(X > 3)
X[which(X>3),]
X[which(X>3)]
X[,which(X>3)]
X[X>3]
sort(X$var1)
X
order(X$var1)
X[order(X$var1),]
library(plyr)
?plyr
arrange(X,var1)
arrange(X,desc(var1))
?desc
desc(var1)
urlQ1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(urlQ1,destfile="../Quiz3/Q1.csv",method="curl")
urlQ1 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(urlQ1,destfile="./Quiz3/Q1.csv",method="curl")
dataQ1 <- read.table("./Quiz3/Q1.csv",sep=",",header=TRUE)
name(dataQ1)
names(dataQ1)
head(dataQ1,3)
agricultureLogical <- which(dataQ1$ACR == 3 & dataQ1$AGS == 6)
head(agricultureLogical,3)
q()
q()
df <- as.data.frame("var1"=c(1,2,3),"var1"=c(4,5,6))
df <- as.data.frame("var1"=c(1,2,3),"var2"=c(4,5,6))
df <- data.frame("var1"=c(1,2,3),"var2"=c(4,5,6))
df
write.table()
write.table():
?write.table
write.table(df,"write_df_to_table.csv")
write.table(df,"write_df_to_table.csv",seq=",",row.names=FALSE)
write.table(df,"write_df_to_table.csv",sep=",",row.names=FALSE)
mx <- matrxi(c(1,2,3),c(4,5,6))
mx <- matrix(c(1,2,3),c(4,5,6))
?matrix
mx <- matrix(c(1,2,3,4,5,6),nrow=2,ncol=3)
mx
write.table(df,"write_mx_to_table.csv",sep=",",row.names=FALSE)
write.table(mx,"write_mx_to_table.csv",sep=",",row.names=FALSE)
save(df,mx,file="save.rda")
q()
getwd()
getwd()
getwd()
rm(list=ls())
cat("\014")
df <- data.frame("var1"=c(1,2,3),"var2"=c(4,5,6))
mx <- matrix(c(1,2,3,4,5,6),nrow=2,ncol=3)
save(df,mx,file="./Andrew Jaffe Lectures/save.rda")
ls()
rm(list=ls())
cat("\014")
load("./Andrew Jaffe Lectures/save.rda")
x <- c(1,3,77,54,23,7,76,5)
x[1:3]
x[-2] # all but the second
x[-2,-3] # all but the second
x[(-2,-3)] # all but the second
x[-c(2,3)]
x[-1:3]
x[-(1:3)]
x[-(1:3)] # drop the first,second,and third element
x[-c(1,2,3)] # which is equivalent to above
?seq
seq(from=1,to=10,by=2)
seq(from=2,to=10,by=2) # evens
seq(from=1,to=10,length.out=3)
seq(along=x)
seq(from=10,to=2,by=-2) # evens descending
fileURL <- "https://data.baltimorecity.gov/api/views(k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
getwd()
fileURL <- "https://data.baltimorecity.gov/api/views(k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./Week3/restaurants.csv",method="curl")
restData <- read.csv("./Week3/restaurants.csv")
rm(list=ls())
cat("\014")
fileURL <- "https://data.baltimorecity.gov/api/views(k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./Week3/restaurants.csv",method="curl")
restData <- read.csv("./Week3/restaurants.csv")
restdata
restData
rm(list=ls())
cat("\014")
fileURL <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileURL,destfile="./Week3/restaurants.csv",method="curl")
restData <- read.csv("./Week3/restaurants.csv")
head(restData,3)
tail(restData,4)
rm(list=ls())
cat("\014")
restData <- read.csv("./Week3/restaurants.csv")
summary(restData)
str(restData)
View(restData)
head(restData,3)
quantile(restData$councilDistrict,na.rm=TRUE)
?quantile
quantile(restData$councilDistrict,probs=seq(0.1,1.0,0.1),na.rm=TRUE)
?table
table(restData$zipCode,useNA="no")
table(restData$councilDistrict,restData$zipCode,useNA="no")
table(restData$councilDistrict,restData$zipCode,restData$neighborhood,useNA="no")
table(restData$councilDistrict,restData$zipCode,useNA="no")
cat("\014")
sum(is.na(restData$councilDistrict))
any(is.na(restData$councilDistrict))
?all
all(restData$zipCode > 0)
restData$zipCode %in% c("21212")
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
restData[restData$zipCode %in% c("21212"),]
data(UCBAdmission)
data(UCBAdmissions)
DF <- as.data.frame(UCBAdmissions)
View(DF)
summary(DF)
?xtabs
xtabs(Freq ~ Gender + Admit,data=DF)
xtabs(Freq ~ Gender + Dept,data=DF)
xtabs(Freq ~ Gender,data=DF)
xtabs(Freq ~ Gender + Dept,data=DF)
xtabs(Freq ~ Gender + Dept + Admit,data=DF)
?rep
rep(1:9,5)
rep(1:9,54)
wrapbreaks
wrapbreaks$replicate <- rep(1:9,54)
warpbreaks$replicate <- rep(1:9,54)
xtabs(Freq ~ Gender + Dept + Admit,data=DF)
xt <- xtabs(Freq ~ Gender + Dept + Admit,data=DF)
ftable(xt)
object.size(restData)
print(object.size(restData),units="Mb")
print(object.size(restData),units="Mb")
q()
install.packages("jpeg")
library(jpeg)
urlQ2 <- "https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg"
download.file(urlQ2,destfile="./Quiz3/jeff.jpg",method="curl")
jeff <- readJPEG("./Quiz3/jeff.jpg", native=TRUE)
View(jeff)
jeff
quantile(jeff,probs=c(0.3,0.8))
urlGDP <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(urlQ2,destfile="./Quiz3/countriesGDP.csv",method="curl")
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
download.file(urlGDP,destfile="./Quiz3/countriesGDP.csv",method="curl")
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
head(countriesGDP)
names(countriesGDP)
View(countriesGDP)
urlEDU <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(urlEDU,destfile="./Quiz3/countriesEDU.csv",method="curl")
countriesEDU <- read.csv("./Quiz3/countriesEDU.csv",head=TRUE)
View(countriesEDU)
View(countriesEDU)
setnames(countriesGDP, "X", "CountryCode")
library(data.table)
setnames(countriesGDP, "X", "CountryCode")
View(countriesGDP)
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
View(countriesGDP)
setnames(countriesGDP, "X.2", "Long.Name")
View(countriesGDP)
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
View(countriesGDP)
countriesGDP <- countriesGDP[-c(1:4)]
View(countriesGDP)
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
library(data.table)
setnames(countriesGDP, "X", "CountryCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
countriesGDP <- countriesGDP[-c(1:4),]
View(countriesGDP)
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
library(data.table)
setnames(countriesGDP, "X", "CountryCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
View(countriesGDP[-c(1:4),])
countriesGDP[-c(1:4),]
c(1:3)
c(1:3,232:241)
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
library(data.table)
setnames(countriesGDP, "X", "CountryCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
View(countriesGDP)
GDP_Rs <- countriesGDP[-c(1:4,195,220,222,236:330),]
View(GDP_Rs)
?merge
?base.merge
??base.merge
?base::merge
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
setnames(countriesGDP, "X", "ShortCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
GDP_Rs <- countriesGDP[-c(1:4,195,220,222,236:330),]
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode",all=TRUE)
View(merged)
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode")
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode",all=TRUE)
GDP_Rs <- countriesGDP[-c(1:4,195:330),]
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode",all=TRUE)
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode")
View(merged)
mergedALL <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode")
mergedALL <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode",
all=TRUE)
View(mergedALL)
GDP_Rs <- countriesGDP[-c(1:4,195:330),-c("X.1","X.4","X.5","X.6","X.7","X.8")]
GDP_Rs <- countriesGDP[,-c("X.1","X.4","X.5","X.6","X.7","X.8")]
countriesGDP[ , -which(names(countriesGDP) %in% c("X.1","X.4","X.5","X.6","X.7","X.8"))]
countriesGDP[-c(1:4,195:330),-which(names(countriesGDP) %in% c("X.1","X.4","X.5","X.6","X.7","X.8"))]
GDP_Rs <- countriesGDP[-c(1:4,195:330),-which(names(countriesGDP) %in% c("X.1","X.4","X.5","X.6","X.7","X.8"))]
View(GDP_Rs)
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode")
rm(list=ls())
cat("\014")
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
countriesEDU <- read.csv("./Quiz3/countriesEDU.csv",head=TRUE)
library(data.table)
setnames(countriesGDP, "X", "ShortCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
GDP_Rs <- countriesGDP[-c(1:4,195:330),-which(names(countriesGDP) %in% c("X.1","X.4","X.5","X.6","X.7","X.8"))]
merged <- base::merge(countriesEDU,GDP_Rs,by.x="CountryCode",by.y="ShortCode")
library(plyr)
names(merged)
library(plyr)
arrange(merged,desc(GDP.Ranking))
dataQ4 <- arrange(merged,desc(GDP.Ranking))
data[13,"Long.Name"]
dataQ4[13,"Long.Name"]
View(dataQ4)
dataQ4 <- arrange(merged,desc(as.numeric(GDP.Ranking)))
View(dataQ4)
sort(merged$GDP.Ranking,decreasing=TRUE)
merged <- base::merge(GDP_Rs,countriesEDU,by.x="ShortCode",by.y="CountryCode")
View(merged)
merged$GDP.Ranking
merged$GDP.Ranking <- as.numeric(merged$GDP.Ranking)
merged$GDP.Ranking
dataQ4 <- arrange(merged,desc(GDP.Ranking))
View(dataQ4)
merged <- base::merge(GDP_Rs,countriesEDU,by.x="ShortCode",by.y="CountryCode")
merged$GDP.Ranking
sort(merged$GDP.Ranking)
class(merged$GDP.Ranking)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
as.numeric.factor(merged$GDP.Ranking)
merged$GDP.Ranking <- as.numeric.factor(merged$GDP.Ranking)
merged$GDP.Ranking
sort(merged$GDP.Ranking)
dataQ4 <- arrange(merged,desc(GDP.Ranking))
View(dataQ4)
nrow(dataQ4)
cat(sprintf("%d", "%s", nrow(dataQ4), dataQ4[13,Long.Name.x])
cat(sprintf("%d", "%s", nrow(dataQ4), dataQ4[13,Long.Name.x]))
cat(sprintf("%d", "%s", nrow(dataQ4), dataQ4[13,Long.Name.x]))
cat(sprintf("%d", "%s", nrow(dataQ4), dataQ4[13,"Long.Name.x"]))
cat(sprintf("%d, %s", nrow(dataQ4), dataQ4[13,"Long.Name.x"]))
cat(sprintf("%d,%s", nrow(dataQ4), dataQ4[13,"Long.Name.x"]))
q()
q()
countriesGDP <- read.csv("./Quiz3/countriesGDP.csv",head=TRUE)
countriesEDU <- read.csv("./Quiz3/countriesEDU.csv",head=TRUE)
library(data.table)
setnames(countriesGDP, "X", "ShortCode")
setnames(countriesGDP, "Gross.domestic.product.2012", "GDP.Ranking")
setnames(countriesGDP, "X.2", "Long.Name")
setnames(countriesGDP, "X.3", "Millions.Of.US.Dollar")
GDP_Rs <- countriesGDP[-c(1:4,195:330),-which(names(countriesGDP) %in% c("X.1","X.4","X.5","X.6","X.7","X.8"))]
merged <- base::merge(GDP_Rs,countriesEDU,by.x="ShortCode",by.y="CountryCode")
library(plyr)
as.numeric.factor <- function(x) {as.numeric(levels(x))[x]}
merged$GDP.Ranking <- as.numeric.factor(merged$GDP.Ranking)
dataQ4 <- arrange(merged,desc(GDP.Ranking))
cat(sprintf("%d,%s", nrow(dataQ4), dataQ4[13,"Long.Name.x"]))
View(merged)
merged$Income.Group
merged$Income.Group <- as.character.factor(merged$Income.Group)
merged$Income.Group
merged$Income.Group %in% c("High income: OECD")
mean(merged[merged$Income.Group %in% c("High income: OECD"),"GDP.Ranking"])
OECD <- mean(merged[merged$Income.Group %in% c("High income: OECD"),"GDP.Ranking"])
nonOECD <- mean(merged[merged$Income.Group %in% c("High income: nonOECD"),"GDP.Ranking"])
cat(sprintf("%.5f,%.5f", OECD, nonOECD))
merged$Income.Group
dataQ6 <- arrange(merged,GDP.Ranking)
View(dataQ6)
sum(dataQ6[1:38,(dataQ6$Income.Group=="Lower middle income")])
dataQ6[1:38,(dataQ6$Income.Group=="Lower middle income")]
dataQ6[,(dataQ6$Income.Group=="Lower middle income")]
dataQ6$Income.Group=="Lower middle income"
dataQ6[1:38,][dataQ6$Income.Group=="Lower middle income"],]
dataQ6$Income.Group=="Lower middle income"
dataQ6$Income.Group=="Lower middle income"[1:38]
(dataQ6$Income.Group=="Lower middle income")[1:38]
sum((dataQ6$Income.Group=="Lower middle income")[1:38])
q()
